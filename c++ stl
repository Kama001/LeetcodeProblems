// to find cumSum
int cumsum = accumulate(matchsticks.begin(), matchsticks.end(),0);

// to sort vector int reverse order
sort(matchstick.rbegin(), rend());


class Solution {
public:
  vector<int> dp;
    vector<vector<int>> adjList;
    int minTime(int n, vector<vector<int>>& edges, vector<bool>& hasApple) 
    {
        adjList.resize(n);
        for(vector<int> &e:edges) {
            adjList[e[0]].push_back(e[1]), adjList[e[1]].push_back(e[0]);
        }
        return dfs(hasApple,0,0,-1)*2;     //Result is doubled the distance travelled as per our observation.
    }
};

================
=== oops pdf ===
================

https://drive.google.com/file/d/1C9xnlHfyL8lijGN18sN2_xoCZD5xwZsr/view?usp=sharing
